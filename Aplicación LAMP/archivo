Let us explore the environment for our KodeKloud e-commerce LAMP stack application. There are 2 servers - lamp-web and lamp-db. Let us setup the inventory files for that. Create an inventory file at /home/thor/playbooks/lamp-stack-playbooks/inventory to include the following data:

Hosts: lamp-web, lamp-db
Groups: db_servers contains lamp-db; web_servers contains lamp-web
IP Addresses: lamp-web: 172.20.1.100; lamp-db: 172.20.1.101
Credentials for lamp-web: Username=john Password=john
Credentials for lamp-db Username=maria Password=maria

---CREAMOS EL INVENTORY
[thor@ansible-controller lamp-stack-playbooks]$ cat inventory 
# Inventory File
[db_servers]
lamp-db ansible_host=172.20.1.101 ansible_user=maria ansible_ssh_pass=maria mysqlservice=mysqld mysql_port=3306 dbname=ecomdb dbuser=ecomuser dbpassword=ecompassword

[web_servers]
lamp-web ansible_host=172.20.1.100 ansible_user=john ansible_ssh_pass=john httpd_port=80 repository=https://github.com/kodekloudhub/learning-app-ecommerce.git


Let us setup password less authentication between Ansible Controller and the web/db servers.
Create a pair of SSH keys for each user (without any passphrase) at /home/thor/.ssh/maria and /home/thor/.ssh/john
And distribute the public keys to the web and database servers - lamp-db and lamp-web.
DB server user is maria and its password is maria. Web server user is john and its password is john.

[thor@ansible-controller lamp-stack-playbooks]$ ssh-keygen
Generating public/private rsa key pair.
Enter file in which to save the key (/home/thor/.ssh/id_rsa): /home/thor/.ssh/maria
Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
Your identification has been saved in /home/thor/.ssh/maria.
Your public key has been saved in /home/thor/.ssh/maria.pub.
The key fingerprint is:
SHA256:M/UVIVGu6hRr/oDGcvqCcJhVJ4rsT1K9ZSJlobof3j4 thor@ansible-controller
The key's randomart image is:
+---[RSA 2048]----+
|      ..    oo+. |
|     .= .    o . |
| . ..* o  .   o  |
|  o.= o o. . o   |
| ..= . =S . o    |
|  *.o .. + +     |
|  .*... = *      |
|   oooE= = .     |
|    o.++. o..    |
+----[SHA256]-----+

--Ahora distribuimos la llave ssh
ssh-copy-id -i /home/thor/.ssh/maria maria@lamp-db

---update ansible inventory "quitamos el password y a√±adimos la ssh_key"
[db_servers]
lamp-db ansible_host=172.20.1.101 ansible_user=maria  mysqlservice=mysqld mysql_port=3306 dbname=ecomdb dbuser=ecomuser dbpassword=ecompassword ansible_ssh_private_key_file=/home/thor/.ssh/maria

[web_servers]
lamp-web ansible_host=172.20.1.100 ansible_user=john  httpd_port=80 repository=https://github.com/kodekloudhub/learning-app-ecommerce.git ansible_ssh_private_key_file=/home/thor/.ssh/john



A playbook deploy-lamp-stack.yml is given with a basic tasks to install basic libraries. Execute the playbook and fix any issues.
You are not required to add any tasks or plays. Only fix the issue with execution.

- name: Deploy lamp stack application
  hosts: all
  become: true
  tasks:
    - name: Install common dependencies
      yum:
        name:
          - libselinux-python
          - libsemanage-python
          - firewalld
        state: installed


Let us continue to improve our LAMP stack E-Commerce application. Now that we have learned to develop playbooks and various modules, let's further develop our playbooks to install packages and configure applications.
Let us start with the first step of installing common dependencies on both the servers. We need the following packages installed on both web and db servers.

libselinux-python
libsemanage-python
firewalld.

Playbook: ~/playbooks/lamp-stack-playbooks/deploy-lamp-stack.yml

---
- hosts: all
  tasks:
    - name: Install common dependencies
      package:
        name:
         - libselinux-python
         - libsemanage-python
         - firewalld
        state: latest
        
Let us now configure MariaDB Service on the lamp-db server. Update the playbook to add a play to perform the following tasks on lamp-db

1. Install the following packages:
mariadb-server
MySQL-python

2. Copy the MySQL Configuration file
located at files/my.cnf to /etc/my.cnf

3. Start and enable the mariadb Service
4. Start and enable the firewalld Service
5. Insert firewalld rule
Allow mysql_port - 3306/tcp zone - public

Playbook: ~/playbooks/lamp-stack-playbooks/deploy-lamp-stack.yml

--- 
- hosts: all
  become: true
  tasks:
    - name: Install common dependencies
      package:
        name:
         - libselinux-python
         - libsemanage-python
         - firewalld
        state: latest


- hosts: lamp-db
  become: true
  tasks:
    - name: Install MariaDB
      package:
        name:
         - mariadb-server
         - MySQL-python
        state: latest

    - name: Copy the MySQL Configuration file
      copy:
        src: files/my.cnf
        dest: /etc/my.cnf

    - name: Start mariadb service
      service:
        name: mariadb
        state: started
	enabled: yes
        
    - name: Start firewalld service
      service:
        name: firewalld
        state: started  
	enabled: yes
    
    - name: Insert firewalld rule
      firewalld:
	port: 3306/tcp
        zone: public
        state: enabled
        permanent: yes
        immediate: yes
        
 Let us now configure MariaDB Database and add some inventory data for our e-commerce store. Update the playbook to add a play to perform the following tasks on lamp-db

1. Create Application Database
Use the dbname variable from inventory as the name of the database

2. Create Application Database User
Use inventory variables dbuser dbpassword from inventory.
host should be set to IP address of web server 172.20.1.100
priv should be set to *.*:ALL

3. Copy db-load-script.sql file to /tmp directory on the database server
4. Load Inventory data by running the below shell command on the database server
mysql -f < /tmp/db-load-script.sql

Playbook: ~/playbooks/lamp-stack-playbooks/deploy-lamp-stack.yml

--- 
- hosts: all
  become: true
  tasks:
    - name: Install common dependencies
      package:
        name:
         - libselinux-python
         - libsemanage-python
         - firewalld
        state: latest


- hosts: lamp-db
  become: true
  tasks:
    - name: Install MariaDB
      package:
        name:
         - mariadb-server
         - MySQL-python
        state: latest

    - name: Copy the MySQL Configuration file
      copy:
        src: files/my.cnf
        dest: /etc/my.cnf

    - name: Start mariadb service
      service:
        name: mariadb
        state: started
        enabled: yes
        
    - name: Start firewalld service
      service:
        name: firewalld
        state: started 
        enabled: yes 
    
    - name: Insert firewalld rule
      firewalld:
        port: 3306/tcp
        zone: public
        state: enabled
        permanent: yes
        immediate: yes

    - name: Create Application Database
      mysql_db: 
        name={{ dbname }} 
        state=present
    
    - name: Create database user
      mysql_user:
        name={{ dbuser }}
        password={{ dbpassword }}
        priv='*.*:ALL'
        host=172.20.1.100
        state=present    

    - name: Copy db-load-script.sql file to /tmp directory on the database server
      copy:
        src: db-load-script.sql
        dest: /tmp

    - name: Load Inventory data by running the below shell command on the database server
      shell: mysql -f < /tmp/db-load-script.sql
      
      
1. Install Web Server
Install httpd, php and php-mysql packages

2. Install Git to download source code
package: git

3. Start and enable the firewalld service
4. Insert firewalld rule for httpd
For port use httpd_port/tcp variable.

4. Set index.php as the default page
Modify line "DirectoryIndex index.html" to "DirectoryIndex index.php" in file /etc/httpd/conf/httpd.conf

5. Start and enable the httpd service
Playbook: ~/playbooks/lamp-stack-playbooks/deploy-lamp-stack.yml


--- 
- hosts: all
  become: true
  tasks:
    - name: Install common dependencies
      package:
        name:
         - libselinux-python
         - libsemanage-python
         - firewalld
        state: latest


- hosts: lamp-db
  become: true
  tasks:
    - name: Install MariaDB
      package:
        name:
         - mariadb-server
         - MySQL-python
        state: latest

    - name: Copy the MySQL Configuration file
      copy:
        src: files/my.cnf
        dest: /etc/my.cnf

    - name: Start mariadb service
      service:
        name: mariadb
        state: started
        
    - name: Start firewalld service
      service:
        name: firewalld
        state: started  
    
	- name: Insert firewalld rule
	  firewalld
	    port: 3306/tcp
        zone: public
        state: enabled
        permanent: yes
        immediate: yes
		
    - name: Create Application Database
      mysql_db:  
        name={{ dbname }}  
        state=present
    
    - name: Create database user
     mysql_user:
       name: {{dbuser}}
       password: {{dbpassword}}
       priv: '*.*:ALL'
       host: 172.20.1.100
       state: present    

   - name: Copy db-load-script.sql file to /tmp directory on the database server
     copy:
       src: db-load-script.sql
       dest: /tmp

   - name: Load Inventory data by running the below shell command on the database server
     shell: mysql -f < /tmp/db-load-script.sql
	 
	 
###webserver
- hosts: lamp-web
  become: true
  tasks:
    - name: Install Web Server and git
      package:
        name:
         - httpd
         - php
         - php-mysql
         - git
        state: latest

    - name: Start firewalld service
      service:
        name: firewalld
        state: started
        enabled: yes

    - name: Insert firewalld rule
      firewalld
        port={{ httpd_port }}/tcp
        zone: public
        state: enabled
        permanent: yes
        immediate: yes

    - name: Set index.php as the default page
      replace:
        path: /etc/httpd/conf/httpd.conf
        regexp: 'DirectoryIndex index.html'
        replace: 'DirectoryIndex index.php'


    - name: Start and enable the httpd service
      service:
        name: httpd
        state: started
        enabled: yes
	   
	


