--- Develop a jinja2 expression to print the given words in a new line. Use Jina2 Blocks ---
{
  "names": [
    "Alpha",
    "Beta",
    "Charlie",
    "Delta",
    "Echo"
  ]
}

SOLUTION:
{% for name in names -%}
{{ name }}
{% endfor %}

OUTPUT:
Alpha
Beta
Charlie
Delta
Echo

--- Develop a jinja2 expression to generate a resolv.conf file using the given name server details. Use Jina2 Blocks ---
{
  "name_servers": [
    "10.1.1.5",
    "10.1.1.6",
    "10.1.1.8",
    "10.8.8.1",
    "8.8.8.8"
  ]
}

SOLUTION:
{% for name_server in name_servers -%}
nameserver {{ name_server }}
{% endfor %}

OUTPUT:
nameserver 10.1.1.5
nameserver 10.1.1.6
nameserver 10.1.1.8
nameserver 10.8.8.1
nameserver 8.8.8.8


--- Develop a jinja2 expression to generate an /etc/hosts file using the given information. Use Jina2 Blocks ---
{
  "hosts": [
    {
      "name": "web1",
      "ip_address": "192.168.5.4"
    },
    {
      "name": "web2",
      "ip_address": "192.168.5.5"
    },
    {
      "name": "web3",
      "ip_address": "192.168.5.8"
    },
    {
      "name": "db1",
      "ip_address": "192.168.5.9"
    }
  ]
}

SOLUTION:
{% for host in hosts -%}
{{ host.name }} {{ host.ip_address }}
{% endfor %}

OUTPUT:
web1 192.168.5.4
web2 192.168.5.5
web3 192.168.5.8
db1 192.168.5.9


--- Update the jinja2 expression to use an if block to update /etc/hosts file only if the hostname contains web. Use Jina2 Blocks ---
{
  "hosts": [
    {
      "name": "web1",
      "ip_address": "192.168.5.4"
    },
    {
      "name": "web2",
      "ip_address": "192.168.5.5"
    },
    {
      "name": "web3",
      "ip_address": "192.168.5.8"
    },
    {
      "name": "db1",
      "ip_address": "192.168.5.9"
    }
  ]
}

SOLUTION:
{% for host in hosts -%}
  {% if "web" in host.name %}
{{ host.name }} {{ host.ip_address }}
  {% endif %}
{% endfor %}

OUTPUT:
web1 192.168.5.4
web2 192.168.5.5
web3 192.168.5.8
