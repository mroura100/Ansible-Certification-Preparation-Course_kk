---
- hosts: "{{ target }}"
  become: yes
  gather_facts: true
  #debugger: always
  vars:
    dir_scripts: "/home/ansible/"
    ver_test: "9.0.1"
    dir_tmp_repo: /serveis/marc/update_tomcat/new_version_{{ ver_to_update | trim }}/apache-tomcat-9.0.68/
    dir_backup_tomcat: /serveis/marc/update_tomcat/backup_tomcat_{{ current_version.stdout_lines[1] | trim }}
    dir_tomcat: /opt/jws/tomcat
    dir_jws: /opt/jws/
    dir_instancia_lib: /opt/jws/instancia/lib/
    #ver_actual: "{{ current_version.stdout_lines[1] | trim }}"
    ver_actual: "{{ current_version.stdout_lines[1] }}"
    ver_actual_major: "{{ ver_actual.split('.')[0]}}.{{ ver_actual.split('.')[1]}}"
    ver_actual_minor: "{{ ver_actual.split('.')[2]}}"
    ver_nova: "{{ ver_to_update }}"
    ver_nova_major: "{{ ver_nova.split('.')[0]}}.{{ ver_nova.split('.')[1] }}"
    ver_nova_minor: "{{ ver_nova.split('.')[2] }}"
  tasks:
    # - name: mostra les variables
    #   remote_user: tomgc0
    #   debug:
    #     var: ansible_facts
    #     # msg: "'{{ lookup('env', 'HOME') }}' is the HOME environment variable."
    - name: busquem la versió del tomcat
      script: "{{ dir_scripts }}check_version.sh"
      register: current_version
      vars:

    - name: nom de la variable
      debug:
        msg: "{{ ver_actual }}"

    - name: Obtenim el nom  de la instancia del Tomcat
      remote_user: tomcat
      shell: "source /home/tomcat/.bash_profile;echo $CATALINA_BASE | cut -d/ -f4"
      register: instancia


    - name: Comprova si s'ha d'actualitzar.
      #when: current_version.stdout | trim is version(ver_to_update, '<')
      when: ver_actual_major is version(ver_nova_major, '=') and ver_actual_minor is version(ver_nova_minor, '<')
      block:
        - name: creem directori al host destí {{ dir_tmp_repo }}
          file:
            state: directory
            path: "{{ dir_tmp_repo }}"
            mode: "0770"
            owner: tomcat
            group: tomcat

        - name: Descarregem la versió correcte del repositori.
          get_url:
            url: "https://archive.apache.org/dist/tomcat/tomcat-9/v9.0.68/bin/apache-tomcat-{{ ver_to_update }}.zip"
            dest: "{{ dir_tmp_repo }}/tomcat_{{ ver_to_update }}.zip"
            #username: itm
            #password: monitor@ibm2014



        - name: Descomprimim el zip al directori {{ dir_tmp_repo }}
          unarchive:
            src: "{{ dir_tmp_repo }}/tomcat_{{ ver_to_update }}.zip"
            dest: "{{ dir_tmp_repo }}"
            remote_src: yes
            group: tomcat
            owner: tomcat
        - name: Borrem el fitxer "{{ dir_tmp_repo }}/tomcat_{{ ver_to_update }}.zip"
          file:
            state: absent
            path: "{{ dir_tmp_repo }}/tomcat_{{ ver_to_update }}.zip"

        - name: Aturem la instancia {{ instancia.stdout | trim }}.
          remote_user: tomcat
          shell: "source /home/tomcat/.bash_profile;echo $CATALINA_BASE | cut -d/ -f4"
          register: instancia
          notify: "parem_instancia"

        - name: Creem carpeta de backup {{ dir_backup_tomcat }}
          file:
            path: "{{ dir_backup_tomcat }}"
            state: directory

        - name: Copiem la carpeta /opt/jws/ a la carpeta {{ dir_backup_tomcat }}
          become: true
          copy:
            src: "{{ dir_jws }}"
            remote_src: yes
            dest: "{{ dir_backup_tomcat }}"
            owner: tomcat
            group: tomcat

        - name: Esborrem el contingut de la carpeta {{ dir_tomcat }}
          become: true
          file:
             path: "{{ dir_tomcat}}"
             state: absent
             #shell: "rm -rf {{ dir_tomcat }}"

        - name: Copiem  {{ dir_tmp_repo }} a {{ dir_tomcat }}
          copy:
            src: "{{ dir_tmp_repo }}"
            dest: "{{ dir_tomcat}}"
            remote_src: yes
            owner: tomcat
            group: tomcat


        - name: Sobreescrivim fitxsers amb els de la versió anterior {{ current_version.stdout_lines[1] | trim }}
          copy:
            src: "{{ dir_backup_tomcat }}/tomcat"
            dest: "{{ dir_jws }}"
            remote_src: yes
            force: no # amb el no, assegurem que no sobreescriu in fitxer que ja existeix.
            owner: tomcat
            group: tomcat

        - name: Donem permisosd'execució al directori {{ dir_tomcat }}/bin
          file:
            path: "{{ dir_tomcat }}/bin"
            owner: tomcat
            group: tomcat
            mode: '0755'
            recurse: yes


        - name: Busquem les llibreries ojdbc* mod* mssql* i db2*
          find:
            paths: /serveis/marc/update_tomcat/backup_tomcat_9.0.7/tomcat/lib/
            patterns: 'ojdbc*,mod*,mssql*,db2*'
          register: file_to_copy

        - name: Llibreries trobades
          debug:
            msg: "{{file_to_copy.files | map(attribute='path')| list }}"


        - name: Copiem  les llibreries al directori /lib de la instància
          copy:
            src: "{{ item.path }}"
            dest: "{{ dir_instancia_lib }}"
            remote_src: yes
            owner: tomcat
            group: tomcat
          with_items:
            - "{{ file_to_copy.files }}"

        - name: Iniciem la instancia {{ instancia.stdout | trim }}.
          remote_user: tomcat
          shell: "source /home/tomcat/.bash_profile;echo $CATALINA_BASE | cut -d/ -f4"
          register: instancia
          notify: "iniciem_instancia"


  handlers:
    - name: Atura_Tomcat
      become: true
      service:
        name: instancia
        state: stopped
      listen: "parem_instancia"

    - name: Aixeca_Tomcat
      become: true
      service:
        name: instancia
        state: started
      listen: "iniciem_instancia"
